.IFJcode21

JUMP *built_in_functions_bypass
                                                        
LABEL reads0                                                                 
  PUSHFRAME                                                                  
                                                                             
  DEFVAR LF@result                                                           
  READ LF@result string                                                      
                                                                             
  JUMPIFEQ *retnil LF@result string@EOF                                      
                                                                             
  JUMP *reads_end                                                            
                                                                             
# Return nil                                                                 
LABEL *retnil                                                                
  MOVE LF@result nil@nil                                                     
  JUMP *reads_end                                                            
                                                                             
# Function end                                                               
LABEL *reads_end                                                             
  POPFRAME                                                                   
  DEFVAR LF@!ret_0                                                           
  MOVE LF@!ret_0 TF@result                                                   
  RETURN                                                                     
                                                                             

                                                        
LABEL readi0                                                                 
  PUSHFRAME                                                                  
                                                                             
  DEFVAR LF@result                                                           
  READ LF@result int                                                         
                                                                             
  JUMPIFEQ *readi_retnil LF@result int@-1                                    
                                                                             
  JUMP *readi_end                                                            
                                                                             
# Return nil                                                                 
LABEL *readi_retnil                                                          
  MOVE LF@result nil@nil                                                     
  JUMP *readi_end                                                            
                                                                             
# Function end                                                               
LABEL *readi_end                                                             
  POPFRAME                                                                   
  DEFVAR LF@!ret_0                                                           
  MOVE LF@!ret_0 TF@result                                                   
  RETURN                                                                     
                                                                             

                                                        
LABEL readn0                                                                 
  PUSHFRAME                                                                  
                                                                             
  DEFVAR LF@result                                                           
  READ LF@result float                                                       
                                                                             
  JUMPIFEQ *readn_retnil LF@result float@-0x1p+0                             
                                                                             
  JUMP *readn_end                                                            
                                                                             
# Return nil                                                                 
LABEL *readn_retnil                                                          
  MOVE LF@result nil@nil                                                     
  JUMP *readn_end                                                            
                                                                             
# Function end                                                               
LABEL *readn_end                                                             
  POPFRAME                                                                   
  DEFVAR LF@!ret_0                                                           
  MOVE LF@!ret_0 TF@result                                                   
  RETURN                                                                     
                                                                             

                                                    
LABEL tointeger0                                                             
  PUSHFRAME                                                                  
                                                                             
  DEFVAR LF@type                                                             
  TYPE LF@type LF@$param_0                                                   
  JUMPIFNEQ *tointeger_retnil LF@type string@float                           
                                                                             
  DEFVAR LF@result                                                           
  FLOAT2INT LF@result LF@$param_0                                            
                                                                             
  JUMP *tointeger_end                                                        
                                                                             
# Return nil                                                                 
LABEL *tointeger_retnil                                                      
  MOVE LF@result nil@nil                                                     
  JUMP *tointeger_end                                                        
                                                                             
# Function end                                                               
LABEL *tointeger_end                                                         
  POPFRAME                                                                   
  DEFVAR LF@!ret_0                                                           
  MOVE LF@!ret_0 TF@result                                                   
  RETURN                                                                     
                                                                             

                                                       
LABEL substr0                                                                
                                                                             
    PUSHFRAME                                                                
                                                                             
    DEFVAR LF@$$STRRET                                                       
    MOVE LF@$$STRRET string@                                                 
                                                                             
    DEFVAR LF@$$STRPAR1                                                      
    MOVE LF@$$STRPAR1 LF@$$STRPARAM1                                         
                                                                             
    DEFVAR LF@$$STRPAR2                                                      
    MOVE LF@$$STRPAR2 LF@$$STRPARAM2                                         
                                                                             
    DEFVAR LF@$$STRPAR3                                                      
    MOVE LF@$$STRPAR3 LF@$$STRPARAM3                                         
                                                                             
    JUMPIFEQ _STR$ERROR_ LF@$$STRPAR1 nil@nil                                
    JUMPIFEQ _STR$ERROR_ LF@$$STRPAR2 nil@nil                                
    JUMPIFEQ _STR$ERROR_ LF@$$STRPAR3 nil@nil                                
                                                                             
    DEFVAR LF@$$STRHELP                                                      
    MOVE LF@$$STRHELP nil@nil                                                
                                                                             
    DEFVAR LF@$$STRLEN                                                       
    STRLEN LF@$$STRLEN LF@$$STRPAR1                                          
                                                                             
    # if (param3 < param2)                                                   
    LT LF@$$STRHELP LF@$$STRPAR3 LF@$$STRPAR2                                
    JUMPIFEQ _STR$EMPTY_ LF@$$STRHELP bool@true                              
                                                                             
    # if (param2 < 1)                                                        
    LT LF@$$STRHELP LF@$$STRPAR2 int@1                                       
    JUMPIFEQ _STR$EMPTY_ LF@$$STRHELP bool@true                              
                                                                             
                                                                             
    # if (param2 > len(param1))                                              
    GT LF@$$STRHELP LF@$$STRPAR2 LF@$$STRLEN                                 
    JUMPIFEQ _STR$EMPTY_ LF@$$STRHELP bool@true                              
                                                                             
    # if (param3 < 1)                                                        
    LT LF@$$STRHELP LF@$$STRPAR3 int@1                                       
    JUMPIFEQ _STR$EMPTY_ LF@$$STRHELP bool@true                              
                                                                             
    # if (param3 > len(param1))                                              
    GT LF@$$STRHELP LF@$$STRPAR3 LF@$$STRLEN                                 
    JUMPIFEQ _STR$EMPTY_ LF@$$STRHELP bool@true                              
                                                                             
    #---------------------------------                                       
    DEFVAR LF@$$STRINDEX                                                     
    MOVE LF@$$STRINDEX int@0                                                 
                                                                             
    DEFVAR LF@$$STRTMP                                                       
    ADD LF@$$STRPAR3 LF@$$STRPAR3 int@1                                      
    LABEL _STR$WHILE_                                                        
        # if (param2 < param3)                                               
        LT LF@$$STRHELP LF@$$STRPAR2 LF@$$STRPAR3                            
        JUMPIFEQ _STR$RET_ LF@$$STRHELP bool@false                           
                                                                             
        GETCHAR LF@$$STRTMP LF@$$STRPAR1 LF@$$STRPAR2                        
        CONCAT LF@$$STRRET LF@$$STRRET LF@$$STRTMP                           
                                                                             
        ADD LF@$$STRINDEX LF@$$STRINDEX int@1                                
        ADD LF@$$STRPAR2 LF@$$STRPAR2 int@1                                  
                                                                             
    JUMP _STR$WHILE_                                                         
                                                                             
    JUMP _STR$RET_                                                           
                                                                             
LABEL _STR$EMPTY_                                                            
    MOVE LF@$$STRRET string@                                                 
    JUMP _STR$RET_                                                           
                                                                             
LABEL _STR$ERROR_                                                            
    EXIT int@8                                                               
                                                                             
LABEL _STR$RET_                                                              
    POPFRAME                                                                 
    RETURN                                                                   
                                                                             

                                                          
LABEL ord0                                                                   
  PUSHFRAME                                                                  
                                                                             
  DEFVAR LF@result                                                           
                                                                             
# Check if the input string or the input integer equals nil                  
  JUMPIFEQ *ord_err LF@$param_0 nil@nil                                      
  JUMPIFEQ *ord_err LF@$param_1 nil@nil                                      
                                                                             
# Return nil if !(strlen(s) > i)                                             
  DEFVAR LF@len                                                              
  DEFVAR LF@strlenGTi                                                        
  STRLEN LF@len LF@$param_0                                                  
  GT LF@strlenGTi LF@len LF@$param_1                                         
  JUMPIFEQ *ord_retnil LF@strlenGTi bool@false                               
                                                                             
# Return nil if i < 0                                                        
  DEFVAR LF@iLT0                                                             
  LT LF@iLT0 LF@$param_1 int@0                                               
  JUMPIFEQ *ord_retnil LF@iLT0 bool@true                                     
                                                                             
# Get the result and return                                                  
  STRI2INT LF@result LF@$param_0 LF@$param_1                                 
  JUMP *ord_end                                                              
                                                                             
# Exit with err                                                              
LABEL *ord_err                                                               
  EXIT int@8                                                                 
                                                                             
# Return nil                                                                 
LABEL *ord_retnil                                                            
  MOVE LF@result nil@nil                                                     
  JUMP *ord_end                                                              
                                                                             
# Function end                                                               
LABEL *ord_end                                                               
  POPFRAME                                                                   
  DEFVAR LF@!ret_0                                                           
  MOVE LF@!ret_0 TF@result                                                   
  RETURN                                                                     
                                                                             

                                                          
LABEL chr0                                                                   
  PUSHFRAME                                                                  
                                                                             
  DEFVAR LF@$$CHRRET                                                         
  MOVE LF@$$CHRRET string@                                                   
                                                                             
  DEFVAR LF@$$CHRPAR1                                                        
  MOVE LF@$$CHRPAR1 LF@$$CHRPARAM1                                           
                                                                             
  DEFVAR LF@$$CHRHELP                                                        
                                                                             
  JUMPIFEQ _CHR$ERROR_ LF@$$CHRPAR1 nil@nil                                  
                                                                             
  # if (param1 < 0)                                                          
  LT LF@$$CHRHELP LF@$$CHRPAR1 int@0                                         
  JUMPIFEQ _CHR$NILL_ LF@$$CHRHELP bool@true                                 
                                                                             
  # if (param1 > 255)                                                        
  GT LF@$$CHRHELP LF@$$CHRPAR1 int@255                                       
  JUMPIFEQ _CHR$NILL_ LF@$$CHRHELP bool@true                                 
                                                                             
  INT2CHAR LF@$$CHRRET LF@$$CHRPAR1                                          
                                                                             
JUMP _CHR$RET_                                                               
                                                                             
                                                                             
LABEL _CHR$NILL_                                                             
MOVE LF@$$CHRRET nil@nil                                                     
JUMP _CHR$RET_                                                               
                                                                             
LABEL _CHR$ERROR_                                                            
  EXIT int@8                                                                 
                                                                             
LABEL _CHR$RET_                                                              
                                                                             
  POPFRAME                                                                   
  RETURN                                                                     
                                                                             

LABEL *built_in_functions_bypass

# END OF BUILT IN FUNCTIONS DEFINITIONS

# New function definition
JUMP *label__0
LABEL ret0

PUSHFRAME

# Jumping to variable declaration
JUMP *label__1

# Jump back here from declarations
LABEL *label__2

# Return encountered - returning
MOVE LF@?tmpvar_0 int@10
DEFVAR LF@!ret_0
MOVE LF@!ret_0 LF@?tmpvar_0
MOVE LF@?tmpvar_1 int@20
DEFVAR LF@!ret_1
MOVE LF@!ret_1 LF@?tmpvar_1
POPFRAME
RETURN
# Return done

JUMP *label__3

# Variable declarations
LABEL *label__1
DEFVAR LF@?tmpvar_0
MOVE LF@?tmpvar_0 nil@nil
DEFVAR LF@?tmpvar_1
MOVE LF@?tmpvar_1 nil@nil

# Jump from var declarations
JUMP *label__2

# Skip variable declaration
LABEL *label__3
DEFVAR LF@!ret_2
MOVE LF@!ret_2 nil@nil
DEFVAR LF@!ret_3
MOVE LF@!ret_3 nil@nil
POPFRAME
RETURN
# Function definition done

LABEL *label__0

# New function definition
JUMP *label__5
LABEL main0

PUSHFRAME

# Jumping to variable declaration
JUMP *label__6

# Jump back here from declarations
LABEL *label__7
JUMP *label_bypass_11
LABEL *label_eval_12

# Calling a function inside a function

# Calling a function
CREATEFRAME

# Processing function call arguments
# Processing function call arguments done

CALL ret0

# Function call inside a function done
MOVE LF@?tmpvar_2 TF@!ret_0
MOVE LF@?tmpvar_3 TF@!ret_1
JUMP *label_ASSEND_10
LABEL *label_bypass_11
LABEL *label_ASSEND_10
MOVE LF@%var_a_1 LF@?tmpvar_2
MOVE LF@%var_b_1 LF@?tmpvar_3

# Calling write functions
CREATEFRAME
DEFVAR TF@$param__0
JUMPIFEQ *label_isnil_13 LF@%var_a_1 nil@nil
MOVE TF@$param__0 LF@%var_a_1
JUMP *label_notnil_14
LABEL *label_isnil_13
MOVE TF@$param__0 string@nil
LABEL *label_notnil_14
WRITE TF@$param__0
DEFVAR TF@$param__1
JUMPIFEQ *label_isnil_15 LF@%var_b_1 nil@nil
MOVE TF@$param__1 LF@%var_b_1
JUMP *label_notnil_16
LABEL *label_isnil_15
MOVE TF@$param__1 string@nil
LABEL *label_notnil_16
WRITE TF@$param__1
JUMP *label__8

# Variable declarations
LABEL *label__6
DEFVAR LF@?tmpvar_0
MOVE LF@?tmpvar_0 nil@nil
DEFVAR LF@?tmpvar_1
MOVE LF@?tmpvar_1 nil@nil
DEFVAR LF@%var_a_1
MOVE LF@%var_a_1 nil@nil
DEFVAR LF@%var_b_1
MOVE LF@%var_b_1 nil@nil
DEFVAR LF@?tmpvar_2
MOVE LF@?tmpvar_2 nil@nil
DEFVAR LF@?tmpvar_3
MOVE LF@?tmpvar_3 nil@nil

# Jump from var declarations
JUMP *label__7

# Skip variable declaration
LABEL *label__8
POPFRAME
RETURN
# Function definition done

LABEL *label__5

# Calling a function from the global frame

# Calling a function
CREATEFRAME

# Processing function call arguments
# Processing function call arguments done

CALL main0
# Function call from the global frame done

